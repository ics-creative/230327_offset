/* いくつかの作例で共通して使うキーフレームです */
@keyframes move {
  to {
    offset-distance: 100%;
  }
}

/* ------------------ 遊園地：観覧車 ------------------ */
.wrapper__amusementPark {
  position: relative;
}

.ferrisWheel {
  position: absolute;
  left: 50%;
  bottom: 0;
  width: 200px;
  height: 250px;
  translate: -50%;
}

.ferrisWheel_gondola {
  position: absolute;
  width: 40px;
  height: 40px;
  translate: 0 20px; /* offset-anchorプロパティが全ブラウザでは対応していないので、translateで位置を調整 */
  fill: hsl(calc(15deg + var(--index) * 36deg), 100%, 80%); /* CSS変数(--index)の値に応じて色相をずらし、レインボーにする */
  cursor: pointer;
  offset-path: path("M100,0 A100,100 0 1,1 100,200 A100,100 0 1,1 100,0 Z");
  offset-rotate: 0deg;
  animation: rotate-gondola 40s linear infinite;
}

/* 観覧車が回転するアニメーション */
@keyframes rotate-gondola {
  from {
    offset-distance: calc(10% * var(--index)); /* 0% 10% 20% ... 90% */
  }
  to {
    offset-distance: calc(100% + 10% * var(--index)); /* 100% 110% 120% ... 190% */
  }
}

.gondola {
  width: inherit;
  height: inherit;
  transform-origin: top center;
}

/* ホバー可能なデバイスでのみ適用 */
@media (any-hover: hover) {
  .ferrisWheel_gondola:hover .gondola {
    animation: swing-gondola 0.8s ease-out;
  }
}

/* スマホでも動作させたいので、HTMLにontouchstartを追加し、CSSでactiveクラスを指定しています */
@media (any-hover: none) {
  .ferrisWheel_gondola:active .gondola {
    animation: swing-gondola 0.8s ease-out;
  }
}

/* ゴンドラが揺れるアニメーション */
@keyframes swing-gondola {
  10% {
    rotate: 45deg;
  }
  35% {
    rotate: -38deg;
  }
  55% {
    rotate: 25deg;
  }
  70% {
    rotate: -15deg;
  }
  90% {
    rotate: 5deg;
  }
}

.ferrisWheel_wheel, .ferrisWheel_frame {
  position: absolute;
  display: block;
  pointer-events: none;
}

.ferrisWheel_wheel {
  width: 200px;
  height: 200px;
  background-image: url("../images/amusementPark/ferriswheel_wheel.svg");
  animation: rotate-wheel 40s linear infinite;
}

@keyframes rotate-wheel {
  to {
    rotate: 360deg;
  }
}

.ferrisWheel_frame {
  width: 200px;
  height: 250px;
  background-image: url("../images/amusementPark/ferriswheel_frame.svg");
}

/* --------- 遊園地：ジェットコースター --------- */
.rollerCoaster {
  pointer-events: none;
}

.rollerCoaster_vehicle {
  position: relative;
  left: 50%;
  width: 790px;
  height: 300px;
  translate: -50%;
}

.rollerCoaster_vehicle_item {
  position: absolute;
  display: block;
  width: 16px;
  height: 8px;
  background-color: #1479b7;
  border-radius: 2px;
  offset-path: path("m2.63,209.053C52.632,174.606,73.712,77.114,132.52,52.907c74.773-30.779,12.771,192.822,73.211,202.529,54.714,8.787,52.963-109.401,107.94-109.401,25.342,0,37.3,45.413,41.674,61.454,11.961,43.86,53.559,62.85,70.843,67.476,38.803,10.386,86.598,3.102,110.783-7.36,35.38-15.305,63.534-40.31,79.3-75.913,8.186-18.486,26.224-109.706-43.594-110.659-55.836-.762-59.496,65.968-46.686,99.027,35.952,92.781,261.608,68.707,261.608,68.707V114.533c-96.886-8.899-77.985,90.427-151.986,100.397-33.848,4.56-38.351-89.16-72.384-86.308-32.323,2.709-28.707,116.35-76.631,107.791-18.446-3.294-22.221-82.948-53.338-79.039-46.123,5.794-54.515,96.254-87.623,97.405-99.677,3.467-73.265-152.889-131.541-151.449-41.27,1.02-77.234,61.548-94.523,94.17C78.307,275.366,31.004,272.669,1.6,274.757");
  animation: move 14s infinite linear;
  animation-delay: calc(0.1s * var(--index));
}

.rollerCoaster_rail {
  position: absolute;
  top: 1px;
  left: 50%;
  translate: -50%;
  display: block;
  width: 790px;
  height: 300px;
  background-image: url("../images/amusementPark/rail.svg");
}

/* ------------------ おばけ ------------------ */
.ghost {
  position: relative;
  display: flex;
  justify-content: center;
}

.ghost_image {
  position: absolute;
  top: calc(1rem + 8px); /* labelの高さ */
  left: calc(50% - 270px);
  display: block;
  cursor: pointer;
  offset-path: path("m241.751,142.925c43.31-20.713,56.006-62.201,100.549-86.711,44.272-24.361,156.608-41.807,178.889-33.531,58.392,21.69-37.254,58.35-43.212,60.362-44.593,15.06-166.413,5.261-262.904-14.993-40.339-8.468-145.335-63.352-179.788-15.503-30.698,42.634,28.139,84.58,101.046,64.34,86.311-23.961,163.652-4.758,251.582,10.994,48.604,8.707,166.749,19.277,112.151,47.34-36.778,18.904-131.732,7.721-198.408,1.747C180.349,166.1-8.912,291.142.864,201.323c6.569-60.352,175.83-23.933,240.887-58.398");
  offset-rotate: 0deg;
  animation: move 40s linear infinite, flip 40s linear infinite;
  animation-play-state: running;
}

@media (max-width: 760px) {
  .ghost_image {
    left: calc(50% - 185px);
    offset-path: path("m167.145,142.925c27.134-20.713,35.088-62.201,62.994-86.711,27.737-24.361,98.116-41.807,112.075-33.531,36.583,21.69-23.34,58.35-27.072,60.362-27.938,15.06-104.259,5.261-164.711-14.993-25.273-8.468-91.053-63.352-112.638-15.503-19.232,42.634,17.63,84.58,63.306,64.34,54.075-23.961,102.529-4.758,157.618,10.994,30.451,8.707,104.469,19.277,70.263,47.34-23.042,18.904-82.531,7.721-124.304,1.747-76-10.869-194.574,114.173-188.448,24.354,4.116-60.352,110.159-23.933,150.917-58.398");
  }
}

/* パスの左右両端の位置で、フリップして向きを変える。offset-distanceを動かして、パス上では何％が両端になるのか確認し、キーフレームを打つ */
@keyframes flip {
  15% {
    transform: scaleX(1);
  }
  16% {
    transform: scaleX(-1);
  }
  40% {
    transform: scaleX(-1);
  }
  41% {
    transform: scaleX(1);
  }
  63% {
    transform: scaleX(1);
  }
  64% {
    transform: scaleX(-1);
  }
  87% {
    transform: scaleX(-1);
  }
  88% {
    transform: scaleX(1);
  }
}

/* ふわふわ浮遊する動き */
@keyframes float {
  from {
    transform: translateY(10%);
  }
  to {
    transform: translateY(-10%);
  }
}

/* ブルブル震える動き */
@keyframes shake {
  0% {
    transform: translateX(-4%);
  }
  50% {
    transform: translateX(5%);
  }
  100% {
    transform: translateX(-4%);
  }
}

.ghost_image::after, .ghost_image::before {
  content: "";
  position: absolute;
  width: 80px;
  height: 80px;
  background-size: contain;
  background-repeat: no-repeat;
  translate: -50% -50%; /* 中心をずらす */
}

.ghost_image::before {
  opacity: 1;
  background-image: url("../images/ghost/ghost_fluid.png");
  animation: float 1s ease-out infinite alternate;
}

.ghost_image::after {
  opacity: 0;
  background-image: url("../images/ghost/ghost_rigid.png");
}

/* ホバー可能なデバイスでのみ適用 */
@media (any-hover: hover) {
  .ghost_image:hover {
    animation-play-state: paused;
  }

  .ghost_image:hover.ghost_image::before {
    opacity: 0;
  }

  .ghost_image:hover.ghost_image::after {
    opacity: 1;
    animation: shake 0.1s linear infinite;
  }
}

/* スマホでも動作させたいので、HTMLにontouchstartを追加し、CSSでactiveクラスを指定しています */
@media (any-hover: none) {
  .ghost_image:active {
    animation-play-state: paused;
  }

  .ghost_image:active.ghost_image::before {
    opacity: 0;
  }

  .ghost_image:active.ghost_image::after {
    opacity: 1;
    animation: shake 0.1s linear infinite;
  }
}

/* パスの表示/非表示を切り替えるパネル */
.ghost_panel {
  position: absolute;
  width: 100%;
  height: calc(260px + 1rem + 8px); /* パス画像の高さ:260px + labelの高さ */
}

.ghost_panel_path {
  display: flex;
  justify-content: center;
  width: 100%;
  visibility: hidden;
}

.ghost_panel_path::after {
  content: "";
  width: 540px;
  height: 260px;
  background-image: url("../images/ghost/ghost_path.svg");
}

@media (max-width: 760px) {
  .ghost_panel_path::after {
    width: 370px;
    background-image: url("../images/ghost/ghost_path_sp.svg");
  }
}

#path-ghost:checked ~ .ghost_panel_path {
  visibility: visible;
}

.ghost_panel_path > img {
  display: block;
}

.ghost_panel_label {
  color: white;
}

/* ------------------ 文字書いている風 ------------------ */
.wrapper__letters {
  display: flex;
  justify-content: center;
  align-items: center;
}

.letters {
  position: relative;
  width: 300px;
  height: 270px;
}

.letters_pen {
  position: absolute;
  display: block;
  width: 140px;
  height: 140px;
  background-image: url("../images/letters/letters_pen.png");
  background-size: contain;
  translate: 50% -50%; /* ペン先を文字に合わせる */
  pointer-events: none;

  /* 🌟SVGの<mask>に指定するパスと同じ値です🌟 */
  offset-path: path("m2.348,80.572s13.419,12.98,21.14,11.079c11.174-2.751,31.536-24.701,38.025-25.239,6.389-.53-21.385,25.693-24.459,29.718-5.413,7.09-11.605,25.283-4.55,31.493,7.863,6.923,13.393-.655,24.769-25.374,5.379-11.687-4.068,10.878-3.945,16.587.122,5.676,1.673,14.786,13.121,13.366,13.775-1.709,27.472-54.096,41.337-72.768C119.974,43.023,148.869,1.639,164.589,3.026c13.958,1.232,3.197,23.508,1.539,26.479-3.816,6.839-18.976,43.678-49.781,50.618-21.331,4.806-24.626,32.136-24.711,33.652-.236,4.194,10.144,9.91,24.458-1.367,7.269-5.726-15.819-2.254-28.611,11.33-5.506,5.846,2.166,14.859,22.055,6.01,8.209-3.652,10.733-19.208,20.994-35.927,16.136-26.291,41.535-63.148,44.543-63.683,2.451-.436-2.686,4.953-7.278,13.516-14.464,26.973-50.589,84.537-49.449,86.245,1.501,2.251,23.012-35.269,32.267-35.269s14.804,15.181,7.831,19.498c-.859.531.69-4.121-3.254-5.512-4.446-1.568-14.315,3.266-17.997,9.563-4.582,7.836,1.063,19.99,15.483,10.283,16.427-11.057,18.603-27.489,25.571-28.322,4.712-.563,6.287,6.287,6.287,6.287,0,0-6.17.676-11.059,5.378-7.294,7.016-14.107,18.556-6.59,19.339,10.68,1.112,26.25-15.425,19.163-24.49-3.502-4.48,19.11.016,19.11.016,0,0-15.172,22.934-13.202,21.95,7.36-3.68,22.652-16.087,27.364-18.532,3.843-1.994-8.655,18.608-8.655,18.608,0,0,24.492-19.558,28.995-18.558,2.483.552-7.782,13.937-17.175,36.307-7.761,18.484-17.071,46.77-18.527,55.455-4.023,23.99-1.911,60.906,17.765,61.991,15.992.882,21.799-8.424,33.696-21.683,16.131-17.979-26.993-113.133-15.873-120.355,4.078-2.648,22.063-3.576,25.628-8.464,5.299-7.265-7.086-6.176-13.13-3.134-8.208,4.131-16.046,20.071-1.059,20.888,13.104.714,43.015-28.192,43.015-28.192");
  offset-rotate: 0deg;
}

:root {
  --custom-easing: cubic-bezier(.34, .1, .85, 1.04);
}

[data-wrapper-id="letters"].is-active .letters_pen {
  transition: offset-distance 5.5s var(--custom-easing);
  offset-distance: 100%;
}

.letters_line {
  position: absolute;
}

#letters-svg-text {
  mask: url("#letters-svg-mask");
  -webkit-mask: url("#letters-svg-mask");
}

#letters-svg-mask {
  stroke-dasharray: 1700px;
  stroke-dashoffset: 1700px;
}

[data-wrapper-id="letters"].is-active #letters-svg-mask {
  stroke-dashoffset: 0;
  transition: stroke-dashoffset 5.5s var(--custom-easing);
}
